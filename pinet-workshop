#!/bin/bash
# Part of PiNet https://github.com/PiNet/PiNet-Workshop
#
# See LICENSE file for copyright and license details

version=0.0.1

#PiNet-Workshop
#A simple tool for doing batch functions for Raspberry Pi workshops using PiNet.

NBDRun() {
#Checks if it should be auto NBD compressing or not, if it should be, it recompresses the image
		echo "--------------------------------------------------------"
		echo "Compressing the image, this will take roughly 5 minutes"
		echo "--------------------------------------------------------"
		ltsp-update-image /opt/ltsp/armhf  #If NBD is enabled, recompress the image
}

CheckTerminalSize(){
	#Resizes the terminal to the correct size for the menus
        eval `resize`
        if [ "$LINES" -le "28" ]; then
                a='\e[8;28;'
                b='t'
                printf "$a$COLUMNS$b"
        fi
        eval `resize`
        if [ "$COLUMNS" -le "90" ]; then
                a='\e[8;'
                b=';90t'
                printf "$a$LINES$b"
        fi
}

fixGroups(){
#Adds users to correct needed groups. Can take a while if there is a lot of users!
#Adds all the groups if they don't exist
for ugroup in adm dialout cdrom audio users sudo video games plugdev input; do
	egrep -i "^$ugroup" /etc/group >> /dev/null
	if [ $? = 1 ]; then
		groupadd $ugroup
	fi
done


#Adds all users to all the required groups if they aren't already in them
cut -d: -f1,3 /etc/passwd | egrep ':[0-9]{4}$' | cut -d: -f1 | while IFS= read -r user  #Gets
do
	for ugroup in adm dialout cdrom audio users video games plugdev input pupil; do
		if ! groups "$user" | grep -q -E ' $ugroup(\s|$)'; then
			usermod -a -G $ugroup $user
		fi
	done
done

}

fixGroupsSingle() {
	#Check a single user is in the correct groups
	
	for ugroup in adm dialout cdrom audio users video games plugdev input pupil; do
		if ! groups "$1" | grep -q -E ' $ugroup(\s|$)'; then
			usermod -a -G $ugroup $1
		fi
	done
	
}

DisplayUsers(){
#Displays system users onto the terminal
clear
local TEACHER=$(cat /etc/group | grep --regex "^teacher:.*" | awk -F: '{print $4}')
echo "-------------------"
echo "Current Linux users"
echo "-------------------"
cut -d: -f1,3 /etc/passwd | egrep ':[0-9]{4}$' | cut -d: -f1 | while IFS= read -r user
	do
		echo "$user"
	done
echo "---------------"
echo "Current Linux users in the teacher group"
echo "$TEACHER"
echo "---------------"
echo "Press enter to continue"
read

}


CreateBatch(){
	username=$(whiptail --inputbox "Enter the base username" 8 78 --title "Username" 3>&1 1>&2 2>&3)
	userNum=$(whiptail --inputbox "How many users would you like to create? E.g. pi1, pi2" 8 78 --title "How many?" 3>&1 1>&2 2>&3)
	password=$(whiptail --inputbox "What do you want to set the password to?" 8 78 --title "Password" 3>&1 1>&2 2>&3)
	for i in $(seq 1 $userNum)
	do
		batchUser=$username$i
		egrep "^$batchUser" /etc/passwd >/dev/null
		if [ $? -eq 0 ]; then
			whiptail --title "Error" --msgbox "$batchUser already exists!" 8 78
		else
			pass=$(perl -e 'print crypt($ARGV[0], "password")' $password)
			useradd -m -s /bin/bash -p $pass $batchUser
			fixGroupsSingle $batchUser
		fi
	done
}

RemoveBatch(){
	username=$(whiptail --inputbox "Enter the base username" 8 78 --title "Username" 3>&1 1>&2 2>&3)
	userNum=$(whiptail --inputbox "How many of the batch would you like to remove from 1? E.g. pi1, pi2" 8 78 --title "How many?" 3>&1 1>&2 2>&3)
	for i in $(seq 1 $userNum)
	do
		batchUser=$username$i
		egrep "^$batchUser" /etc/passwd >/dev/null
		userdel -rf $batchUser
		if [ ! $? -eq 0 ]; then
			whiptail --title "Error" --msgbox "$batchUser does not exist!" 8 78
		else
			userdel -rf $batchUser
		fi
	done
	DisplayUsers
}




Menu(){
	IP=`ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'`
	MENUEPT=$(whiptail --title "PiNet-Workshop $version - $IP" --cancel-button "Quit" --ok-button "Select" --menu "What would you like to do?" 20 85 10 \
    "Create-batch-users" "Create a batch of users following a pattern" \
    "Remove-batch-users" "Delete a batch user set" \
    "Group-check" "Checks all users are in the correct system groups" \
    "NBD-recompress" "Force an NBD compress if changes are made outside PiNet" \
    3>&1 1>&2 2>&3)

case "$MENUEPT" in
    Create-batch-users) 
		CreateBatch
		Menu
    ;;
		Remove-batch-users)
		RemoveBatch
		Menu
    ;;
		Group-check)
		fixGroups
		Menu
    ;;
		NBD-recompress)
		NBDRun
		Menu
    ;;
    *)
		exit
    ;;

esac
}
	
if [ "$(id -u)" != "0" ]; then  #Check if script is being run as root
   echo "This script must be run as root" 1>&2
   exit 1
fi

if [ ! "$BASH_VERSION" ] ; then   #Checks that PiNet is being run using bash and not ash (aka sh)
	whiptail --title "Shell error" --msgbox "Please do not run PiNet-workshops with sudo sh $0. Please run it with bash using     sudo bash $0" 8 78
    echo "Please do not run PiNet-workshops with sh $0. Please run it with bash using     sudo bash $0" 1>&2
    exit 1
fi
CheckTerminalSize
sleep 0.05
if [ ! -d /opt/ltsp/armhf ]; then
    	whiptail --title "Welcome" --yesno 'PiNet installation has not be detected! Do you want to continue?' 8 78 
		exitstatus=$?
		if [ $exitstatus = 0 ]; then
			Menu
		fi
else
	Menu	
fi
